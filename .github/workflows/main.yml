# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
          
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Download a file
      uses: carlosperate/download-file-action@v1.0.3
      id: download-poetry
      with:
        file-url: 'https://github.com/dita-ot/dita-ot/releases/download/2.5.4/dita-ot-2.5.4.zip'
        file-name: 'dita-ot-2.5.4.zip'
        location: './downloads'
       
    - name: Unzip the file
      run: |
        echo "The file was downloaded to ${{ steps.download-poetry.outputs.file-path }}"
        unzip ./downloads/dita-ot-2.5.4.zip

      
    
    - name: checkout master
      uses: actions/checkout@v2
      with:
        ref: master
        path: dita-in
        
    - name: checkout gh pages
      uses: actions/checkout@v2
      with:
        ref: gh-pages 
        path: dita-out         
        
    - name: run dita-ot
      run: |
        ./dita-ot-2.5.4/bin/dita -i ./dita-in/src/01-basics/basics.ditamap -f xhtml -o ./dita-out/01-basics/
        ./dita-ot-2.5.4/bin/dita -i ./dita-in/src/02-lists/lists.ditamap -f xhtml -o ./dita-out/02-lists/
    
    - name: commit
      run: |      
        pwd
        cd ./dita-out
        pwd
        ls
        git status
        git config --local user.email "action@github.com"        
        git config --local user.name "GitHub Action"
        git status
        git add .
        git commit -m "update docs"
        git push
